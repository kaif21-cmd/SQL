USE JOINPRACTISE;
-- CREATING TABLE
CREATE TABLE PROJECTS (
    projects_id INT PRIMARY KEY,
    ENROLLMENT_ID INT,
    PROJECT_NAME VARCHAR(255),
    PROJECT_TEACHER VARCHAR(255)
);
-- INSERTING THE RECORDS 
INSERT INTO PROJECTS (projects_id, ENROLLMENT_ID, PROJECT_NAME, PROJECT_TEACHER)
VALUES
    (101, 153, 'E-commerce_Website', 'Faraza_doja'),
    (102, 249, 'RECIPE_GENERATOR', 'NAZIYA_TASBEE'),
    (103, 207, 'SYNTACTIC_ANALYSIS', 'SYED_ALI'),
    (104, 248, 'REAL_STATE_WEBSITE', 'Faraza_doja');

-- TABLE 2 
CREATE TABLE STUDENTS(
ENROLLMENT_ID INT PRIMARY KEY ,
NAME VARCHAR(255),
EMAIL VARCHAR (255),
PHONE VARCHAR (255),
TECHNOLOGY VARCHAR(255)
);

INSERT INTO STUDENTS(ENROLLMENT_ID,NAME,EMAIL,PHONE,TECHNOLOGY)
VALUES
('153','kaif','KAIF@GMAIL.COM','96488338838','WEB_D'),
('249','ZARA','ZARA@GMAIL.COM','9027779870','AI'),
('207','SHAH.RUKH','SHAH@GMAIL.COM','96488628','AI'),
('248','ZAID','ZAID@GMAIL.COM','738280272','WEB_D');
-- JOINS 
-- Returns rows where there is a matching ENROLLMENT_ID in both PROJECTS and STUDENTS.
-- Q1 WHICH PROJECTS IS BASED ON WHICH TECHNOLOGY
SELECT P.PROJECT_NAME,S.TECHNOLOGY 
FROM PROJECTS AS P 
INNER JOIN STUDENTS AS S ON p.ENROLLMENT_ID = s.ENROLLMENT_ID;
 -- Q2 WHICH PROJECT TEACHER IS WORKED ON WHICH TECHNOLOGY 
SELECT P.PROJECT_TEACHER,S.TECHNOLOGY
FROM PROJECTS AS P
INNER JOIN  STUDENTS AS S ON P.ENROLLMENT_ID = S.ENROLLMENT_ID;

-- Returns all rows from PROJECTS and the matched rows from STUDENTS 
-- RETURN ALL ROWS FROM LEFT TABLE AND THE MATCHED ROWS FROM RIGHT TABLE 
SELECT P.PROJECT_NAME, S.TECHNOLOGY 
FROM PROJECTS AS P 
LEFT JOIN STUDENTS AS S 
ON P.ENROLLMENT_ID = S.ENROLLMENT_ID; 

-- Returns all rows from the right table, and the matched rows from the left table. 
-- The result is NULL from the left side when there is no match.
-- -- RETURN ALL ROWS FROM LEFT TABLE AND THE MATCHED ROWS FROM RIGHT TABLE 
SELECT P.PROJECT_NAME, S.TECHNOLOGY 
FROM PROJECTS AS P 
RIGHT JOIN STUDENTS AS S 
ON P.ENROLLMENT_ID = S.ENROLLMENT_ID; 

-- FULL (OUTER) JOIN:
-- Returns all rows when there is a match in either left or right table. 
-- Rows that do not have a match in one of the tables will contain NULL
-- SELECT columns

-- SELECT P.PROJECT_NAME, S.TECHNOLOGY 
-- FROM PROJECTS AS P 
-- FULL OUTER JOIN STUDENTS AS S 
-- ON P.ENROLLMENT_ID = S.ENROLLMENT_ID;

-- CROSS JOIN GIVE CARTESIAN PRODUCT 
-- Result: Returns the Cartesian product of PROJECTS and STUDENTS. 
-- This means every row in PROJECTS is combined with every row in STUDENTS, irrespective of the ENROLLMENT_ID.
SELECT P.PROJECT_NAME, S.TECHNOLOGY 
FROM PROJECTS AS P 
CROSS JOIN STUDENTS AS S;
-- Automatically joins tables based on columns with the same name and returns rows where the values in these columns are equal. Note: 
-- This assumes ENROLLMENT_ID is the common column in both tables with the same name
SELECT P.PROJECT_NAME, S.TECHNOLOGY 
FROM PROJECTS AS P 
NATURAL JOIN STUDENTS AS S;
